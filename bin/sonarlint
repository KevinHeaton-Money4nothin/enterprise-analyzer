#!/usr/bin/env ruby
require 'nokogiri'
exit 'Requires 2 args of path to be analyzed and output file.' unless ARGV.size == 2
path_to_analyze = File.expand_path(ARGV[0])
output_file = File.expand_path(ARGV[1])
sonarlint_path = File.expand_path('~/sonarlint/bin')
exit 'Not a directory.' unless File.directory? path_to_analyze
exit 'Output file does not exist.' unless File.exist? output_file
sonarlint_conf = File.read('SonarLint.xml')
files_to_analyze = Dir.glob("#{path_to_analyze}/*/**/*.cs").map do |file_path|
  "<File>#{file_path}</File>\n"
end
sonarlint_conf = sonarlint_conf.gsub('<----FilesToLint---->', files_to_analyze.join)
new_config_path = File.expand_path('~/SonarLint.xml')
File.write(new_config_path, sonarlint_conf)
cmd = "mono #{sonarlint_path}/SonarLint.Runner.exe #{new_config_path} #{output_file} cs"
`#{cmd}`
# Remove unecessary content
filtered_output = Nokogiri::XML(File.read(output_file))
filtered_output.search('//Metrics').each(&:remove)
filtered_output.search('//File').each do |f|
  issues = f.children.find { |c| c.name == 'Issues' }
  f.remove if issues.inner_text.empty?
end
File.write(output_file, filtered_output.to_s)
